import { Navigation, Section } from "@/components";
import { useMultipleRefs } from "@/hooks";
import Head from "next/head";
import { useCallback, useState } from "react";

export default function Home() {
  // State for active section
  const [activeRef, setActiveRef] = useState(0);

  // Custom hook for multiple refs
  const [refs, setRef] = useMultipleRefs<HTMLDivElement>({ countRefs: 6 });

  // Handle next section
  const handleNextSection = useCallback(() => {
    if (activeRef < refs.length - 1) {
      setActiveRef(activeRef + 1);
      refs?.[activeRef + 1]?.scrollIntoView({ behavior: "smooth" });
    }
  }, [activeRef, refs]);

  // Handle previous section
  const handlePrevSection = useCallback(() => {
    if (activeRef > 0) {
      setActiveRef(activeRef - 1);
      refs?.[activeRef - 1]?.scrollIntoView({ behavior: "smooth" });
    }
  }, [activeRef, refs]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navigation
        onClickNext={handleNextSection}
        onClickPrev={handlePrevSection}
      />

      <Section
        bgColor="#85CB33"
        ref={(node) => setRef({ index: 0, node })}
        sectionRef={refs[0]}
        onVisible={() => {
          setActiveRef(0);
        }}
      >
        <h1>Section 1</h1>
      </Section>
      <Section
        bgColor="#80A1D4"
        ref={(node) => setRef({ index: 1, node })}
        sectionRef={refs[1]}
        onVisible={() => setActiveRef(1)}
      >
        <h1>Section 2</h1>
      </Section>
      <Section
        bgColor="#0D2149"
        ref={(node) => setRef({ index: 2, node })}
        sectionRef={refs[2]}
        onVisible={() => setActiveRef(2)}
      >
        <h1>Section 3</h1>
      </Section>
      <Section
        bgColor="#C84630"
        ref={(node) => setRef({ index: 3, node })}
        sectionRef={refs[3]}
        onVisible={() => setActiveRef(3)}
      >
        <h1>Section 4</h1>
      </Section>
      <Section
        bgColor="#7D98A1"
        ref={(node) => setRef({ index: 4, node })}
        sectionRef={refs[4]}
        onVisible={() => setActiveRef(4)}
      >
        <h1>Section 5</h1>
      </Section>
      <Section
        bgColor="#648DE5"
        ref={(node) => setRef({ index: 5, node })}
        sectionRef={refs[5]}
        onVisible={() => setActiveRef(5)}
      >
        <h1>Section 6</h1>
      </Section>
    </>
  );
}
